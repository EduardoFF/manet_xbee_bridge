#!/bin/bash


# some default parameters #
NODEID=1
TXPOWER=20
CHANNEL=1
WLAN=wlan19
CLICKSCRIPT=/root/click_scripts/rnp_scripts/rnp_linux_args_aligned.click
INITROUTES=""
ETH=eth0
BRIDGED=0
QUIET=0
CLICKAPP=RNP_PKGclick

print_help()
{
    echo "setup_manet: xxxx"
}
export -f print_help


while [ $# -gt 0 ]
do
    key="$1"
    case $key in
	-n|---node-id)
	    NODEID="$2"
	    shift # past argument
	    ;;
	-p|--power)
	    TXPOWER="$2"
	    shift # past argument
	    ;;
	-c|--channel)
	    CHANNEL="$2"
	    shift # past argument
	    ;;
	-i|--interface)
	    WLAN="$2"
	    shift
	    ;;
	--quiet)
	    QUIET=1
	    shift
	    ;;

	--eth)
	    ETH="$2"
	    shift
	    ;;
	--bridged)
	    BRIDGED=1
	    shift
	    ;;
	-s|--click-script)
	    CLICKSCRIPT="$2"
	    shift
	    ;;
	-r|--init-routes)
	    INITROUTES="$2"
	    shift
	    ;;
	-h|--help)
	    print_help
	    exit
	    shift
	    ;;
	*)
            # unknown option
	    print_help
	    exit
	    ;;
    esac
    shift # past argument or value
done

echo "using:"
echo "NODEID=${NODEID}"
echo "TXPOWER=${TXPOWER}"
echo "CHANNEL=${CHANNEL}"
echo "WLAN=${WLAN}"



IPPREFIX=10.42.43
NETMASK=24

IPADDR=${IPPREFIX}.${NODEID}
WLANM=`cat /sys/class/net/${WLAN}/address`
if [ "${BRIDGED}" != 0 ]; then
    echo "bridged mode"
    CLICKAPP=RNP_CLIENT_PKGclick
    ETHMAC=`cat /sys/class/net/${ETH}/address`
fi

#echo ${WLANM}


setup_wlan ${WLAN} ${IPADDR}/${NETMASK} ${CHANNEL} ${TXPOWER} 

ip route del to ${IPPREFIX}.0/${NETMASK}
route add -net 224.0.0.0 netmask 240.0.0.0 dev lo


CTIME=$(env TZ=":Europe/Rome" date +%Y%m%d_%H%M%S)
export CTIME
CLICKLOGFILE="/logs/${CTIME}-click.log"
CLICKCURRENTLOG="/logs/click.log"
mkdir -p /logs/click_dumps/${CTIME}

cd /logs/click_dumps/${CTIME} && ${CLICKAPP} WLANMAC=${WLANM} WLANINTERFACE=${WLAN} ADHOCIP=${IPADDR}/${NETMASK} ${CLICKSCRIPT} &> ${CLICKLOGFILE} &
ln -f -s ${CLICKLOGFILE} ${CLICKCURRENTLOG}
sleep 5
if [ -n "${INITROUTES}" ]; then
    echo "sending default routes ..."
    python -m publish_route2_tree -c RNP2 ${IPADDR} `cat ${INITROUTES} | tr '\n' ' '`
fi

if [ "${QUIET}" != 0 ]; then
    read -p "Press any key to finish"
    kill -9 $(pidof ${CLICKAPP})
    echo "Finished."
else
    while true;
    do
	if [[ -z "$(pidof ${CLICKAPP})" ]]; then
	    exit 1
	fi
	sleep 1
    done
fi

    
    
    


   

